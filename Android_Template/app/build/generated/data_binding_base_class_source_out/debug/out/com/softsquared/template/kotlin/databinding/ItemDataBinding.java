// Generated by view binder compiler. Do not edit!
package com.softsquared.template.kotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.softsquared.template.kotlin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgHeart;

  @NonNull
  public final ImageView ivPicture;

  @NonNull
  public final TextView tvHeart;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvTitle;

  private ItemDataBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imgHeart,
      @NonNull ImageView ivPicture, @NonNull TextView tvHeart, @NonNull TextView tvLocation,
      @NonNull TextView tvPrice, @NonNull TextView tvTime, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.imgHeart = imgHeart;
    this.ivPicture = ivPicture;
    this.tvHeart = tvHeart;
    this.tvLocation = tvLocation;
    this.tvPrice = tvPrice;
    this.tvTime = tvTime;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_heart;
      ImageView imgHeart = ViewBindings.findChildViewById(rootView, id);
      if (imgHeart == null) {
        break missingId;
      }

      id = R.id.iv_picture;
      ImageView ivPicture = ViewBindings.findChildViewById(rootView, id);
      if (ivPicture == null) {
        break missingId;
      }

      id = R.id.tv_heart;
      TextView tvHeart = ViewBindings.findChildViewById(rootView, id);
      if (tvHeart == null) {
        break missingId;
      }

      id = R.id.tv_location;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tv_price;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ItemDataBinding((ConstraintLayout) rootView, imgHeart, ivPicture, tvHeart,
          tvLocation, tvPrice, tvTime, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
